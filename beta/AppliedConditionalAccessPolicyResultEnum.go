// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// AppliedConditionalAccessPolicyResult undocumented
type AppliedConditionalAccessPolicyResult string

const (
	// AppliedConditionalAccessPolicyResultVSuccess undocumented
	AppliedConditionalAccessPolicyResultVSuccess AppliedConditionalAccessPolicyResult = "Success"
	// AppliedConditionalAccessPolicyResultVFailure undocumented
	AppliedConditionalAccessPolicyResultVFailure AppliedConditionalAccessPolicyResult = "Failure"
	// AppliedConditionalAccessPolicyResultVNotApplied undocumented
	AppliedConditionalAccessPolicyResultVNotApplied AppliedConditionalAccessPolicyResult = "NotApplied"
	// AppliedConditionalAccessPolicyResultVNotEnabled undocumented
	AppliedConditionalAccessPolicyResultVNotEnabled AppliedConditionalAccessPolicyResult = "NotEnabled"
	// AppliedConditionalAccessPolicyResultVUnknown undocumented
	AppliedConditionalAccessPolicyResultVUnknown AppliedConditionalAccessPolicyResult = "Unknown"
	// AppliedConditionalAccessPolicyResultVUnknownFutureValue undocumented
	AppliedConditionalAccessPolicyResultVUnknownFutureValue AppliedConditionalAccessPolicyResult = "UnknownFutureValue"
	// AppliedConditionalAccessPolicyResultVReportOnlySuccess undocumented
	AppliedConditionalAccessPolicyResultVReportOnlySuccess AppliedConditionalAccessPolicyResult = "ReportOnlySuccess"
	// AppliedConditionalAccessPolicyResultVReportOnlyFailure undocumented
	AppliedConditionalAccessPolicyResultVReportOnlyFailure AppliedConditionalAccessPolicyResult = "ReportOnlyFailure"
	// AppliedConditionalAccessPolicyResultVReportOnlyNotApplied undocumented
	AppliedConditionalAccessPolicyResultVReportOnlyNotApplied AppliedConditionalAccessPolicyResult = "ReportOnlyNotApplied"
	// AppliedConditionalAccessPolicyResultVReportOnlyInterrupted undocumented
	AppliedConditionalAccessPolicyResultVReportOnlyInterrupted AppliedConditionalAccessPolicyResult = "ReportOnlyInterrupted"
)

// AppliedConditionalAccessPolicyResultPSuccess returns a pointer to AppliedConditionalAccessPolicyResultVSuccess
func AppliedConditionalAccessPolicyResultPSuccess() *AppliedConditionalAccessPolicyResult {
	v := AppliedConditionalAccessPolicyResultVSuccess
	return &v
}

// AppliedConditionalAccessPolicyResultPFailure returns a pointer to AppliedConditionalAccessPolicyResultVFailure
func AppliedConditionalAccessPolicyResultPFailure() *AppliedConditionalAccessPolicyResult {
	v := AppliedConditionalAccessPolicyResultVFailure
	return &v
}

// AppliedConditionalAccessPolicyResultPNotApplied returns a pointer to AppliedConditionalAccessPolicyResultVNotApplied
func AppliedConditionalAccessPolicyResultPNotApplied() *AppliedConditionalAccessPolicyResult {
	v := AppliedConditionalAccessPolicyResultVNotApplied
	return &v
}

// AppliedConditionalAccessPolicyResultPNotEnabled returns a pointer to AppliedConditionalAccessPolicyResultVNotEnabled
func AppliedConditionalAccessPolicyResultPNotEnabled() *AppliedConditionalAccessPolicyResult {
	v := AppliedConditionalAccessPolicyResultVNotEnabled
	return &v
}

// AppliedConditionalAccessPolicyResultPUnknown returns a pointer to AppliedConditionalAccessPolicyResultVUnknown
func AppliedConditionalAccessPolicyResultPUnknown() *AppliedConditionalAccessPolicyResult {
	v := AppliedConditionalAccessPolicyResultVUnknown
	return &v
}

// AppliedConditionalAccessPolicyResultPUnknownFutureValue returns a pointer to AppliedConditionalAccessPolicyResultVUnknownFutureValue
func AppliedConditionalAccessPolicyResultPUnknownFutureValue() *AppliedConditionalAccessPolicyResult {
	v := AppliedConditionalAccessPolicyResultVUnknownFutureValue
	return &v
}

// AppliedConditionalAccessPolicyResultPReportOnlySuccess returns a pointer to AppliedConditionalAccessPolicyResultVReportOnlySuccess
func AppliedConditionalAccessPolicyResultPReportOnlySuccess() *AppliedConditionalAccessPolicyResult {
	v := AppliedConditionalAccessPolicyResultVReportOnlySuccess
	return &v
}

// AppliedConditionalAccessPolicyResultPReportOnlyFailure returns a pointer to AppliedConditionalAccessPolicyResultVReportOnlyFailure
func AppliedConditionalAccessPolicyResultPReportOnlyFailure() *AppliedConditionalAccessPolicyResult {
	v := AppliedConditionalAccessPolicyResultVReportOnlyFailure
	return &v
}

// AppliedConditionalAccessPolicyResultPReportOnlyNotApplied returns a pointer to AppliedConditionalAccessPolicyResultVReportOnlyNotApplied
func AppliedConditionalAccessPolicyResultPReportOnlyNotApplied() *AppliedConditionalAccessPolicyResult {
	v := AppliedConditionalAccessPolicyResultVReportOnlyNotApplied
	return &v
}

// AppliedConditionalAccessPolicyResultPReportOnlyInterrupted returns a pointer to AppliedConditionalAccessPolicyResultVReportOnlyInterrupted
func AppliedConditionalAccessPolicyResultPReportOnlyInterrupted() *AppliedConditionalAccessPolicyResult {
	v := AppliedConditionalAccessPolicyResultVReportOnlyInterrupted
	return &v
}
