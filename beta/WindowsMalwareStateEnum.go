// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// WindowsMalwareState undocumented
type WindowsMalwareState string

const (
	// WindowsMalwareStateVUnknown undocumented
	WindowsMalwareStateVUnknown WindowsMalwareState = "Unknown"
	// WindowsMalwareStateVDetected undocumented
	WindowsMalwareStateVDetected WindowsMalwareState = "Detected"
	// WindowsMalwareStateVCleaned undocumented
	WindowsMalwareStateVCleaned WindowsMalwareState = "Cleaned"
	// WindowsMalwareStateVQuarantined undocumented
	WindowsMalwareStateVQuarantined WindowsMalwareState = "Quarantined"
	// WindowsMalwareStateVRemoved undocumented
	WindowsMalwareStateVRemoved WindowsMalwareState = "Removed"
	// WindowsMalwareStateVAllowed undocumented
	WindowsMalwareStateVAllowed WindowsMalwareState = "Allowed"
	// WindowsMalwareStateVBlocked undocumented
	WindowsMalwareStateVBlocked WindowsMalwareState = "Blocked"
	// WindowsMalwareStateVCleanFailed undocumented
	WindowsMalwareStateVCleanFailed WindowsMalwareState = "CleanFailed"
	// WindowsMalwareStateVQuarantineFailed undocumented
	WindowsMalwareStateVQuarantineFailed WindowsMalwareState = "QuarantineFailed"
	// WindowsMalwareStateVRemoveFailed undocumented
	WindowsMalwareStateVRemoveFailed WindowsMalwareState = "RemoveFailed"
	// WindowsMalwareStateVAllowFailed undocumented
	WindowsMalwareStateVAllowFailed WindowsMalwareState = "AllowFailed"
	// WindowsMalwareStateVAbandoned undocumented
	WindowsMalwareStateVAbandoned WindowsMalwareState = "Abandoned"
	// WindowsMalwareStateVBlockFailed undocumented
	WindowsMalwareStateVBlockFailed WindowsMalwareState = "BlockFailed"
)

// WindowsMalwareStatePUnknown returns a pointer to WindowsMalwareStateVUnknown
func WindowsMalwareStatePUnknown() *WindowsMalwareState {
	v := WindowsMalwareStateVUnknown
	return &v
}

// WindowsMalwareStatePDetected returns a pointer to WindowsMalwareStateVDetected
func WindowsMalwareStatePDetected() *WindowsMalwareState {
	v := WindowsMalwareStateVDetected
	return &v
}

// WindowsMalwareStatePCleaned returns a pointer to WindowsMalwareStateVCleaned
func WindowsMalwareStatePCleaned() *WindowsMalwareState {
	v := WindowsMalwareStateVCleaned
	return &v
}

// WindowsMalwareStatePQuarantined returns a pointer to WindowsMalwareStateVQuarantined
func WindowsMalwareStatePQuarantined() *WindowsMalwareState {
	v := WindowsMalwareStateVQuarantined
	return &v
}

// WindowsMalwareStatePRemoved returns a pointer to WindowsMalwareStateVRemoved
func WindowsMalwareStatePRemoved() *WindowsMalwareState {
	v := WindowsMalwareStateVRemoved
	return &v
}

// WindowsMalwareStatePAllowed returns a pointer to WindowsMalwareStateVAllowed
func WindowsMalwareStatePAllowed() *WindowsMalwareState {
	v := WindowsMalwareStateVAllowed
	return &v
}

// WindowsMalwareStatePBlocked returns a pointer to WindowsMalwareStateVBlocked
func WindowsMalwareStatePBlocked() *WindowsMalwareState {
	v := WindowsMalwareStateVBlocked
	return &v
}

// WindowsMalwareStatePCleanFailed returns a pointer to WindowsMalwareStateVCleanFailed
func WindowsMalwareStatePCleanFailed() *WindowsMalwareState {
	v := WindowsMalwareStateVCleanFailed
	return &v
}

// WindowsMalwareStatePQuarantineFailed returns a pointer to WindowsMalwareStateVQuarantineFailed
func WindowsMalwareStatePQuarantineFailed() *WindowsMalwareState {
	v := WindowsMalwareStateVQuarantineFailed
	return &v
}

// WindowsMalwareStatePRemoveFailed returns a pointer to WindowsMalwareStateVRemoveFailed
func WindowsMalwareStatePRemoveFailed() *WindowsMalwareState {
	v := WindowsMalwareStateVRemoveFailed
	return &v
}

// WindowsMalwareStatePAllowFailed returns a pointer to WindowsMalwareStateVAllowFailed
func WindowsMalwareStatePAllowFailed() *WindowsMalwareState {
	v := WindowsMalwareStateVAllowFailed
	return &v
}

// WindowsMalwareStatePAbandoned returns a pointer to WindowsMalwareStateVAbandoned
func WindowsMalwareStatePAbandoned() *WindowsMalwareState {
	v := WindowsMalwareStateVAbandoned
	return &v
}

// WindowsMalwareStatePBlockFailed returns a pointer to WindowsMalwareStateVBlockFailed
func WindowsMalwareStatePBlockFailed() *WindowsMalwareState {
	v := WindowsMalwareStateVBlockFailed
	return &v
}
