// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// DerivedCredentialProviderType undocumented
type DerivedCredentialProviderType string

const (
	// DerivedCredentialProviderTypeVNotConfigured undocumented
	DerivedCredentialProviderTypeVNotConfigured DerivedCredentialProviderType = "NotConfigured"
	// DerivedCredentialProviderTypeVEntrustDataCard undocumented
	DerivedCredentialProviderTypeVEntrustDataCard DerivedCredentialProviderType = "EntrustDataCard"
	// DerivedCredentialProviderTypeVPurebred undocumented
	DerivedCredentialProviderTypeVPurebred DerivedCredentialProviderType = "Purebred"
	// DerivedCredentialProviderTypeVXTec undocumented
	DerivedCredentialProviderTypeVXTec DerivedCredentialProviderType = "XTec"
	// DerivedCredentialProviderTypeVIntercede undocumented
	DerivedCredentialProviderTypeVIntercede DerivedCredentialProviderType = "Intercede"
)

// DerivedCredentialProviderTypePNotConfigured returns a pointer to DerivedCredentialProviderTypeVNotConfigured
func DerivedCredentialProviderTypePNotConfigured() *DerivedCredentialProviderType {
	v := DerivedCredentialProviderTypeVNotConfigured
	return &v
}

// DerivedCredentialProviderTypePEntrustDataCard returns a pointer to DerivedCredentialProviderTypeVEntrustDataCard
func DerivedCredentialProviderTypePEntrustDataCard() *DerivedCredentialProviderType {
	v := DerivedCredentialProviderTypeVEntrustDataCard
	return &v
}

// DerivedCredentialProviderTypePPurebred returns a pointer to DerivedCredentialProviderTypeVPurebred
func DerivedCredentialProviderTypePPurebred() *DerivedCredentialProviderType {
	v := DerivedCredentialProviderTypeVPurebred
	return &v
}

// DerivedCredentialProviderTypePXTec returns a pointer to DerivedCredentialProviderTypeVXTec
func DerivedCredentialProviderTypePXTec() *DerivedCredentialProviderType {
	v := DerivedCredentialProviderTypeVXTec
	return &v
}

// DerivedCredentialProviderTypePIntercede returns a pointer to DerivedCredentialProviderTypeVIntercede
func DerivedCredentialProviderTypePIntercede() *DerivedCredentialProviderType {
	v := DerivedCredentialProviderTypeVIntercede
	return &v
}
