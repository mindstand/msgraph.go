// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// ResultantAppState undocumented
type ResultantAppState string

const (
	// ResultantAppStateVInstalled undocumented
	ResultantAppStateVInstalled ResultantAppState = "Installed"
	// ResultantAppStateVFailed undocumented
	ResultantAppStateVFailed ResultantAppState = "Failed"
	// ResultantAppStateVNotInstalled undocumented
	ResultantAppStateVNotInstalled ResultantAppState = "NotInstalled"
	// ResultantAppStateVUninstallFailed undocumented
	ResultantAppStateVUninstallFailed ResultantAppState = "UninstallFailed"
	// ResultantAppStateVPendingInstall undocumented
	ResultantAppStateVPendingInstall ResultantAppState = "PendingInstall"
	// ResultantAppStateVUnknown undocumented
	ResultantAppStateVUnknown ResultantAppState = "Unknown"
	// ResultantAppStateVNotApplicable undocumented
	ResultantAppStateVNotApplicable ResultantAppState = "NotApplicable"
)

// ResultantAppStatePInstalled returns a pointer to ResultantAppStateVInstalled
func ResultantAppStatePInstalled() *ResultantAppState {
	v := ResultantAppStateVInstalled
	return &v
}

// ResultantAppStatePFailed returns a pointer to ResultantAppStateVFailed
func ResultantAppStatePFailed() *ResultantAppState {
	v := ResultantAppStateVFailed
	return &v
}

// ResultantAppStatePNotInstalled returns a pointer to ResultantAppStateVNotInstalled
func ResultantAppStatePNotInstalled() *ResultantAppState {
	v := ResultantAppStateVNotInstalled
	return &v
}

// ResultantAppStatePUninstallFailed returns a pointer to ResultantAppStateVUninstallFailed
func ResultantAppStatePUninstallFailed() *ResultantAppState {
	v := ResultantAppStateVUninstallFailed
	return &v
}

// ResultantAppStatePPendingInstall returns a pointer to ResultantAppStateVPendingInstall
func ResultantAppStatePPendingInstall() *ResultantAppState {
	v := ResultantAppStateVPendingInstall
	return &v
}

// ResultantAppStatePUnknown returns a pointer to ResultantAppStateVUnknown
func ResultantAppStatePUnknown() *ResultantAppState {
	v := ResultantAppStateVUnknown
	return &v
}

// ResultantAppStatePNotApplicable returns a pointer to ResultantAppStateVNotApplicable
func ResultantAppStatePNotApplicable() *ResultantAppState {
	v := ResultantAppStateVNotApplicable
	return &v
}
