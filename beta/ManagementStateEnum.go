// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// ManagementState undocumented
type ManagementState string

const (
	// ManagementStateVManaged undocumented
	ManagementStateVManaged ManagementState = "Managed"
	// ManagementStateVRetirePending undocumented
	ManagementStateVRetirePending ManagementState = "RetirePending"
	// ManagementStateVRetireFailed undocumented
	ManagementStateVRetireFailed ManagementState = "RetireFailed"
	// ManagementStateVWipePending undocumented
	ManagementStateVWipePending ManagementState = "WipePending"
	// ManagementStateVWipeFailed undocumented
	ManagementStateVWipeFailed ManagementState = "WipeFailed"
	// ManagementStateVUnhealthy undocumented
	ManagementStateVUnhealthy ManagementState = "Unhealthy"
	// ManagementStateVDeletePending undocumented
	ManagementStateVDeletePending ManagementState = "DeletePending"
	// ManagementStateVRetireIssued undocumented
	ManagementStateVRetireIssued ManagementState = "RetireIssued"
	// ManagementStateVWipeIssued undocumented
	ManagementStateVWipeIssued ManagementState = "WipeIssued"
	// ManagementStateVWipeCanceled undocumented
	ManagementStateVWipeCanceled ManagementState = "WipeCanceled"
	// ManagementStateVRetireCanceled undocumented
	ManagementStateVRetireCanceled ManagementState = "RetireCanceled"
	// ManagementStateVDiscovered undocumented
	ManagementStateVDiscovered ManagementState = "Discovered"
)

// ManagementStatePManaged returns a pointer to ManagementStateVManaged
func ManagementStatePManaged() *ManagementState {
	v := ManagementStateVManaged
	return &v
}

// ManagementStatePRetirePending returns a pointer to ManagementStateVRetirePending
func ManagementStatePRetirePending() *ManagementState {
	v := ManagementStateVRetirePending
	return &v
}

// ManagementStatePRetireFailed returns a pointer to ManagementStateVRetireFailed
func ManagementStatePRetireFailed() *ManagementState {
	v := ManagementStateVRetireFailed
	return &v
}

// ManagementStatePWipePending returns a pointer to ManagementStateVWipePending
func ManagementStatePWipePending() *ManagementState {
	v := ManagementStateVWipePending
	return &v
}

// ManagementStatePWipeFailed returns a pointer to ManagementStateVWipeFailed
func ManagementStatePWipeFailed() *ManagementState {
	v := ManagementStateVWipeFailed
	return &v
}

// ManagementStatePUnhealthy returns a pointer to ManagementStateVUnhealthy
func ManagementStatePUnhealthy() *ManagementState {
	v := ManagementStateVUnhealthy
	return &v
}

// ManagementStatePDeletePending returns a pointer to ManagementStateVDeletePending
func ManagementStatePDeletePending() *ManagementState {
	v := ManagementStateVDeletePending
	return &v
}

// ManagementStatePRetireIssued returns a pointer to ManagementStateVRetireIssued
func ManagementStatePRetireIssued() *ManagementState {
	v := ManagementStateVRetireIssued
	return &v
}

// ManagementStatePWipeIssued returns a pointer to ManagementStateVWipeIssued
func ManagementStatePWipeIssued() *ManagementState {
	v := ManagementStateVWipeIssued
	return &v
}

// ManagementStatePWipeCanceled returns a pointer to ManagementStateVWipeCanceled
func ManagementStatePWipeCanceled() *ManagementState {
	v := ManagementStateVWipeCanceled
	return &v
}

// ManagementStatePRetireCanceled returns a pointer to ManagementStateVRetireCanceled
func ManagementStatePRetireCanceled() *ManagementState {
	v := ManagementStateVRetireCanceled
	return &v
}

// ManagementStatePDiscovered returns a pointer to ManagementStateVDiscovered
func ManagementStatePDiscovered() *ManagementState {
	v := ManagementStateVDiscovered
	return &v
}
